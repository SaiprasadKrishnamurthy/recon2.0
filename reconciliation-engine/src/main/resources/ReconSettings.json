{
  "name": "Settings 1",
  "group": "FY 21-22",
  "version": 1,
  "dataSources": [
    {
      "id": "sales",
      "predicate": "name='sales' order by id",
      "bucketField": "entityId"
    },
    {
      "id": "tdsLedger",
      "predicate": "name='tdsLedger' order by id",
      "bucketField": "entityId"
    },
    {
      "id": "_26as",
      "predicate": "name='_26as' order by id",
      "bucketField": "entityId"
    }
  ],
  "rulesets": [
    {
      "name": "Entry Checks",
      "type": "EntryWiseOneToOneChecks",
      "rules": [
        {
          "id": "tds_value_checks_on_sales_and_tds_ledger",
          "entriesChecks": {
              "expression": "sales.invoiceNo == tdsLedger.invoiceNo AND valueWithinTolerance(sales.tdsOnSales, tdsLedger.tds, 1.0)"
          },
          "tagsWhenMatched": [
            "TDS_MATCHED_BETWEEN_SALES_AND_TDS_LEDGER"
          ],
          "tagsWhenNotMatched": [
            "TDS_UNMATCHED_BETWEEN_SALES_AND_TDS_LEDGER"
          ]
        }
      ]
    },
    {
      "name": "Entry Checks One To Many",
      "type": "EntryWiseOneToManyChecks",
      "rules": [
        {
          "id": "multi_tds_value_checks_on_sales_and_tds_ledger",
          "entriesOneToManyChecks": {
            "bucketFieldA": "sales.invoiceNo",
            "bucketFieldB": "tdsLedger.invoiceNo",
            "valueFieldA": "sales.tdsOnSales",
            "valueFieldB": "tdsLedger.tds"
          },
          "tagsWhenMatched": [
            "MULTI_TDS_MATCHED_BETWEEN_SALES_AND_TDS_LEDGER"
          ],
          "tagsWhenNotMatched": [
            "MULTI_TDS_UNMATCHED_BETWEEN_SALES_AND_TDS_LEDGER"
          ]
        }
      ]
    },
    {
      "name": "Field Checks",
      "type": "FieldChecks",
      "rules": [
        {
          "id": "tds_value_checks_on_sales",
          "fieldChecks": {
            "expression": "valueWithinTolerance(sales.tdsOnSales, 0.1 * sales.transactionAmount, 1.0)"
          },
          "tagsWhenMatched": [
            "CORRECT_TDS_ON_SALES"
          ],
          "tagsWhenNotMatched": [
            "INCORRECT_TDS_ON_SALES"
          ]
        },
        {
          "id": "tds_value_checks_on_tds_ledger",
          "fieldChecks": {
            "expression": "tdsLedger.tds > 0"
          },
          "tagsWhenMatched": [
            "CORRECT_TDS_ON_TDS_LEDGER"
          ],
          "tagsWhenNotMatched": [
            "INCORRECT_TDS_ON_TDS_LEDGER"
          ]
        }
      ]
    },
    {
      "name": "Total Level Matches",
      "type": "TotalsChecks",
      "rules": [
        {
          "id": "tds_totals_at_transactions_level_between_sales_and_tds_ledger",
          "totalsChecks": {
            "totalsBucketFields": [
              "sales.invoiceNo",
              "tdsLedger.invoiceNo"
            ],
            "totalsOnFields": [
              "sales.tdsOnSales",
              "tdsLedger.tds"
            ],
            "totalsTolerance": 1.0
          },
          "tagsWhenMatched": [
            "TDS_TOTALS_MATCHED_BETWEEN_SALES_AND_TDSLEDGER"
          ],
          "tagsWhenNotMatched": [
            "TDS_TOTALS_UNMATCHED_BETWEEN_SALES_AND_TDSLEDGER"
          ]
        },
        {
          "id": "tds_totals_at_transactions_level_between_tds_ledger_and_26as",
          "totalsChecks": {
            "totalsOnFields": [
              "tdsLedger.tds",
              "_26as.taxFiled"
            ],
            "totalsTolerance": 1.0
          },
          "tagsWhenMatched": [
            "TDS_TOTALS_MATCHED_BETWEEN_TDSLEDGER_AND_26AS"
          ],
          "tagsWhenNotMatched": [
            "TDS_TOTALS_UNMATCHED_BETWEEN_TDSLEDGER_AND_26AS"
          ]
        }
      ]
    }
  ]
}